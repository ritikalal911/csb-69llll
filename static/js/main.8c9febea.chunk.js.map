{"version":3,"sources":["App.js","index.js"],"names":["App","selected","setSelected","useState","startScan","setStartScan","loadingScan","setLoadingScan","data","setData","_jsxs","className","children","_jsx","onClick","_Fragment","onChange","e","target","value","QrReader","facingMode","delay","onError","err","console","error","onScan","async","log","scanData","style","width","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"iNA+DeA,MAzDHA,KACV,MAAOC,EAAUC,GAAeC,mBAAS,gBAClCC,EAAWC,GAAgBF,oBAAS,IACpCG,EAAaC,GAAkBJ,oBAAS,IACxCK,EAAMC,GAAWN,mBAAS,IAgBjC,OACEO,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,MAAAD,SAAI,sBACJF,eAAA,MAAAE,SAAA,CAAI,aAEDX,KAGHY,cAAA,UACEC,QAASA,KACPT,GAAcD,EAAU,EACxBQ,SAEDR,EAAY,YAAc,eAE5BA,GACCM,eAAAK,WAAA,CAAAH,SAAA,CACEF,eAAA,UAAQM,SAAWC,GAAMf,EAAYe,EAAEC,OAAOC,OAAOP,SAAA,CACnDC,cAAA,UAAQM,MAAO,cAAcP,SAAC,gBAC9BC,cAAA,UAAQM,MAAO,OAAOP,SAAC,oBAEzBC,cAACO,IAAQ,CACPC,WAAYpB,EACZqB,MAAO,IACPC,QA3BWC,IACnBC,QAAQC,MAAMF,EAAI,EA2BVG,OAvCSC,UACjBrB,GAAe,GACfkB,QAAQI,IAAI,mBAAoBC,GAC5BA,GAAyB,KAAbA,IACdL,QAAQI,IAAI,aAAcC,GAC1BrB,EAAQqB,GACRzB,GAAa,GACbE,GAAe,GAEjB,EAgCQwB,MAAO,CAAEC,MAAO,cAIrB1B,GAAeO,cAAA,KAAAD,SAAG,YACT,KAATJ,GAAeK,cAAA,KAAAD,SAAIJ,MAChB,ECtDV,MAAMyB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPxB,cAACyB,aAAU,CAAA1B,SACTC,cAACb,EAAG,MAENiC,E","file":"static/js/main.8c9febea.chunk.js","sourcesContent":["// versi \"react-qr-reader\" 1.0.0. component API harus disesuaikan dengan yg baru\n\nimport \"./styles.css\";\nimport { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\n\nconst App = () => {\n  const [selected, setSelected] = useState(\"environment\");\n  const [startScan, setStartScan] = useState(false);\n  const [loadingScan, setLoadingScan] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const handleScan = async (scanData) => {\n    setLoadingScan(true);\n    console.log(`loaded data data`, scanData);\n    if (scanData && scanData !== \"\") {\n      console.log(`loaded >>>`, scanData);\n      setData(scanData);\n      setStartScan(false);\n      setLoadingScan(false);\n      // setPrecScan(scanData);\n    }\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <h2>\n        Last Scan:\n        {selected}\n      </h2>\n\n      <button\n        onClick={() => {\n          setStartScan(!startScan);\n        }}\n      >\n        {startScan ? \"Stop Scan\" : \"Start Scan\"}\n      </button>\n      {startScan && (\n        <>\n          <select onChange={(e) => setSelected(e.target.value)}>\n            <option value={\"environment\"}>Back Camera</option>\n            <option value={\"user\"}>Front Camera</option>\n          </select>\n          <QrReader\n            facingMode={selected}\n            delay={1000}\n            onError={handleError}\n            onScan={handleScan}\n            // chooseDeviceId={()=>selected}\n            style={{ width: \"300px\" }}\n          />\n        </>\n      )}\n      {loadingScan && <p>Loading</p>}\n      {data !== \"\" && <p>{data}</p>}\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}